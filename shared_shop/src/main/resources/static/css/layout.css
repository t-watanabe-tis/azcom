@CHARSET "UTF-8";

/* ---- 共通 ---- */

/* スキルアップテクニック1-1
 * html要素に対しmin-heightプロパティを付けることで、
 * 最小でも表示領域が画面の高さを持つことになります。
 * これにより画面の一番下まで表示領域を拡大し、
 * footerを画面下に配置することができます。
 * positionプロパティは絶対位置表示を可能にし、
 * 値relativeを設定することで子要素(今回はfooter要素)の配置基準になります。
 */
html {
	min-height: 100%;
	position: relative;
	scroll-behavior: smooth;
}

/* スキルアップテクニック1-2
 * 下方向にmarginの余白を設定することでfooterの表示領域を確保します。
 * paddingプロパティの値0は、body要素が持つ枠の領域を取り消します。
 */
body {
	margin: 0 0 30px;
	padding: 0;
}

h2{
	font-size: 1.4em;
	font-weight: normal;
	margin: 0;
	padding: 0;
}
h3 {
	font-size: 1em;
	font-weight: normal;
	margin: 0;
	padding: 0;
}

/* スキルアップテクニック2
 * displayプロパティでは表示方式を変更することができます。
 * block表示だったform要素をinline表示に変更することで、
 * ボタンを横並びにすることができます。
 */
form {
	display: inline;
}

table {
	width:100%;

	border-collapse: collapse;
	margin: 0px auto 20px;
}

ul,
li {
	margin: 0;
	padding: 0;
}
li {
	list-style-type: none;
}


/* スキルアップテクニック3
 * overflowプロパティの値hiddenを設定することで、要素は適切な高さをもつことができます。
 * 子要素にfloatプロパティを設定している場合、その子要素の高さを親要素は知ることができなくなります。
 * しかしoverflowプロパティの値hiddenを設定することで、本来の高さを取り戻すことができます。
 */



.container {
	width: 87%;
	margin: 0 auto;
	overflow: hidden;
	float: none;
	font-size: 50 px;
}
 body::-webkit-scrollbar {
    display:none;



}
body > .container {
	 margin: 0;
  width:100%;                              /* 横幅のサイズを指定    */
    height:700px;
  background-image:
    linear-gradient(140deg,
      #00f3ffA0,
      #0028b960 40%,
      #00f3ff60 60%,
      #00f3ffA0),
    url("https://beiz.jp/images_T/water/water_00001.jpg");
  background-repeat: no-repeat;
  background-position:  center;
  background-attachment: fixed;
  background-size: over;
  animation: move 17s infinite both;
  overflow: hidden;
  font-size: 20 px;

}

@keyframes move{
  0% {
    background-size:100% auto;
  }
  50% {
    background-size:140% auto;
  }
  100% {
    background-size:100% auto;
  }




}
.content {
	padding:30px 0 60px;
}

/* ---- ヘッダー ---- */
header {

	background: linear-gradient(-50deg, #87ceeb, #00008b);
	padding: 10px 0;

}
.admin header {
	background: linear-gradient(to bottom, #ff7f50 0%, #dc143c 100%);
  opacity: 0.5;
  animation: huerotator 3s infinite alternate;
}

/* スキルアップテクニック4
 * font-sizeの単位emは親要素に設定されたfont-sizeの相対指定となります。
 * 親要素のfont-sizeが16px設定だとしたら、1.8emでは1.8倍、即ち28.8pxの大きさとなります。
 * デザインにはジャンプ率の考え方があり、基本の大きさからの倍率で文字サイズを決めることが多々あります。
 * その様な場合、em指定をしておくと便利です。
 * 基本サイズが変更になったとしても、比例して大きさが変化します。
 */

 @import url('https://fonts.googleapis.com/css2?family=Josefin+Sans&display=swap');
.site_title {
	float: left;
	font-size: 4.0em;
	line-height:0.95em;
	font-weight:bold;
	text-shadow: 0.05em 0.02em 0.02em rgba(0,0,0,1);
	margin:0;
	overflow: hidden;
  transform: translate(97%, 0);
  transition: transform cubic-bezier(0.215, 0.61, 0.355, 1)3s;
  color: #8080ff;
  font-family: 'Century Gothic';
}
.title span {
  display: block;
  transform: translate(100%, 0);
  transition: transform cubic-bezier(0.215, 0.61, 0.355, 1) 5s;
}

.title.-visible,
.title.-visible span {
  transform: translate(0, 0);
}

.sentence {
  overflow: hidden;
  transform: translate(-100%, 0);
  transition: transform cubic-bezier(0.215, 0.61, 0.355, 1) 2.5s;
  font-family: "Yu Gothic Medium";
  font-size: 16px;
  text-align: left;
}

.sentence span {
  display: block;
  transform: translate(100%, 0);
  transition: transform cubic-bezier(0.215, 0.61, 0.355, 1) 5s;
}

.sentence.-visible,
.sentence.-visible span {
  transform: translate(0, 0);
}

/* スキルアップテクニック5
 * 横幅の％指定はブロックの数が決まっている際、設定が容易に行えます。
 * また、レスポンシブにも対応できるため、px指定と比べ柔軟性に優れます。
 */
.user_info {
	width:40%;
	float:right;
	text-align: right;
	padding-top: 15px;
}
.user_info a {
	text-decoration: none;
	font-size: 1.2em;
}

/* スキルアップテクニック6
 * :hoverは擬似クラスの一種で、カーソルをその要素に重ねることで動作します。
 * user_infoクラスがつけられた要素の子要素であるa要素にカーソルが重なると、
 * 下線が表示されます。
 */
.user_info a:hover {
	text-decoration: underline;
}

.user_info .pipeline {
	padding:0 8px;
}



/* ---- タイトル共通 ---- */
.search .title,
.main .title,
.admin_menu_area .title {
	background-color: #3d98bf;
	margin: 0;
	padding: 5px 8px;
	color: #fff;
	text-shadow: 1px 1px 1px #12526d;
	font-size: 1.3rem;

}


/* ---- ナビゲーションバー ---- */
.navi_area {
	background: #808080;
}
.navi_menu {
	width: 960px;
	padding:12px 0;
	margin: 0 auto;

}
.navi_menu li {
	display: inline-block;
	width: 25%;
}
.navi_menu a {
	display: inline-block;
	width: 100%;
	font-size: 1.3em;
	line-height: 2.5em;
	border: 1px solid #5fb4d9;
	text-align: center;
	text-decoration: none;
	background: #fff;
	transition: 0.18s;
}
.navi_menu a:hover {
	background: #3d98bf;
	color: #fff;
	text-shadow: 1px 1px 1px #12526d;
	border-color : #3d98bf;
}
.navi_menu li:first-of-type a{
	border-radius: 6px 0px 0px 6px;
}
.navi_menu li:last-of-type a{
	border-radius: 0px 6px 6px 0px;
}

/* ---- サイドバー ---- */
.search,
aside.admin_menu {
	float: left;
	width: 20%;
    height:100%;
/*		background: #8080ff;  */
}
.search .title,
.admin_menu .title {
	border-radius: 6px 6px 0 0;
	text-align: center;
	font-size: 1.2rem;
}
.admin_menu .title {
	background: #ff6c49;
}
.search .form {
	padding: 50px 0 100px 8px;
	width:100%;

}
.search .price,
.admin_menu .display_list {
	display: block;
	padding: 20px;
	border-right: 1px solid #aaa;
	border-bottom: 1px solid #aaa;
	border-left: 1px solid #aaa;
	text-align: center;
	text-decoration: none;
	transition: background-color 0.18s;
	width: 200px; height: 50px;

}
.search .price:link,
.search .price:visited,
.search .price:hover,
.search .price:active,
.admin_menu_area .display_list:link,
.admin_menu_area .display_list:visited,
.admin_menu_area .display_list:hover,
.admin_menu_area .display_list:active {
	color: #2a2a2a;
}
.search .price:hover {
	background: #5fb4d9;
	color: #fff;
}
.admin_menu_area .display_list:hover {
	background: #ff8669;
	color: #fff;
}
.search li:last-of-type .price,
.admin_menu_area li:last-of-type .display_list {
	border-radius: 0 0 6px 6px;
}


/* ---- メイン ---- */
.main {
	float: right;
	width: 75%;
	padding-bottom: 80px;
	font-size: 0.7rem;

}
.admin_menu .main {
	width: 100%;
	float: none;
}

.user .main .title,
.admin .main .title {
	padding: 8px 15px;
	position: relative;
	font-size: 2rem;
	}
.main .title::before,
.admin .main .title::before {
	position: absolute;
	content: '';
	top: 100%;
	left: 0;
	border: none;
	border-bottom: solid 10px transparent;
	border-right: solid 20px rgb(149, 158, 155);
}
.admin .main .title.no_shadow::before {
	display: none;
}
.admin .main .title {
	background: #ff6c49;
}
.admin_menu .admin_menu_list{
	padding: 5px 10px;
	font-size: 1.5em;
	width: 50%;
	margin: 80px auto 0;
}
.admin_menu_list .title_area {
	background: #ff6c49;
	text-align: center;
	border: 1px solid #ff6c49;
	border-radius: 6px 6px 0 0;
	font-size: 1.2em;
	color: #fff;
	text-shadow: 1px 1px 1px #333;
	padding: 5px 0;
}
.admin_menu_list .link_area {
	margin: 0;
}
.admin_menu_list .link_area a{
    display: block;
    padding: 10px;
    border-right: 1px solid #aaa;
    border-bottom: 1px solid #aaa;
    border-left: 1px solid #aaa;
    text-align: center;
    text-decoration: none;
    transition: background-color 0.18s;
}
.admin_menu_list .link_area a:hover{
	background: #ffc6b9;
}
.admin_menu_list .link_area:last-of-type a{
	border-radius: 0 0 6px 6px;
}

.error_mess_maintenance,
.complete_message,
.check_message {
	padding-top: 20px;
	font-size: 1.2em;
}
.complete_message,
.complete_link {
	font-size: 1.2em;
	margin-top: 30px;
	padding-left: 30px;
}
.complete_link a:hover {
	color: #d34320;
}

/* ---- フッター ---- */

/* スキルアップテクニック1-3
 * footer要素の表示位置は画面下、もしくはページ下に設定すると見やすいでしょう。
 * その為に1-1ではhtml要素の表示位置を広げ、配置基準としました。
 * 1-2では他の表示とfooter要素が被らないよう余白を設定しました。
 * ここではfooter要素にpositionプロパティの値をabsoluteにすることで絶対位置表示を行います。
 * 絶対位置表示の基準はpositionプロパティの値を持つ親要素となり、
 * 今回は画面いっぱいのhtml要素がそれになります。
 * bottomプロパティは基準からの配置位置を決定し、今回は0px。
 * つまりhtml要素の一番下から0pxの位置に表示されることとなり、
 * footer要素は画面、もしくはページの最下部に表示されるようになります。
 */
footer {
	background-color: #87ceeb;
	text-align: center;
	position: absolute;
	bottom: 0;
	width: 100%;
}
.admin footer {
	background: #ff8669;
}
small {
	height: 30px;
	line-height:50px;
	text-shadow: 1px 1px 1px #fff;
	font-size: 8pt;

}